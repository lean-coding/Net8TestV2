@page "/Logon"
@layout MyLayout
@using BlazorTestV2.Components.Layout
@using BlazorTestV2.Model
@using BlazorTestV2.Service
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider provider
@inject IMessageService Message
@inject NavigationManager navi
@inject MySyncService sync

<Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged"
      TabPosition="TabPosition.Top" Width="Width.Is50" Border="Border.Is0">
    <Items>
        <Tab Name="logon" Background="Background.Transparent" >Logon</Tab>
        <Tab Name="register" >Register a new account</Tab>
    </Items>
    <Content>
        <TabPanel Name="logon" Border="Border.Is2.RoundedBottom.Primary" Padding="Padding.Is5">
            <EditForm Model=@member>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2" RequiredIndicator>EMail</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit @bind-Text=member.EMail Role="TextRole.Email" Placeholder="Your email as the account here..." />
                    </FieldBody>
                </Field>
                <Field Horizontal>
                    <FieldLabel ColumnSize="ColumnSize.Is2" RequiredIndicator>Password</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.Is10">
                        <TextEdit @bind-Text=member.Password Role="TextRole.Password" Placeholder="Your password here..." />
                    </FieldBody>
                </Field>
                <Field TextAlignment="TextAlignment.Center">
                    <FieldBody ColumnSize="ColumnSize.Is12">
                        <Button Color="Color.Primary" Margin="Margin.Is2.OnX" Clicked="@HandleLogon">Log on</Button>
                        <Button Color="Color.Secondary" Margin="Margin.Is2.OnX" Clicked="@HandleForget">Forget Password</Button>
                    </FieldBody>
                </Field>
            </EditForm>
        </TabPanel>
        <TabPanel Name="register" Border="Border.Is2.RoundedBottom.Primary" Padding="Padding.Is5">
            <Register Member=@member></Register>
        </TabPanel>
    </Content>
</Tabs>

@code {
    string selectedTab { get; set; } = "logon";
    private S_Member member { get; set; } = new();
    private Service.Member srvMember = new();

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState state = await provider.GetAuthenticationStateAsync();
    }

    private Task OnSelectedTabChanged(string name)
    {
        selectedTab = name;
        return Task.CompletedTask;
    }

    private async Task HandleLogon()
    {
        S_Member sMember = await srvMember.CheckLogonMember(member.EMail, member.Password);

        if (sMember != null)
        {
            #region 登入成功
            var myProvider = (MyAuthenticationStateProvider)provider;
            await myProvider.UpdateState(sMember);

            await Message.Success("You have logged in the system!", "Success: ", (x) =>
            {
                x.ShowMessageIcon = false;
                x.CenterMessage = false;    //無效
                x.MessageClass = "text-dark text-left";
                x.TitleClass = "text-success";
            });

            navi.NavigateTo("/");
            #endregion
        }
        else
        {
            await Message.Warning("EMail and Password are not matched.", "Warning: ", (x) =>
            {
                x.ShowMessageIcon = false;
                x.CenterMessage = false;    //無效
                x.MessageClass = "text-dark text-left";
                x.TitleClass = "text-warning";
            });
        }
    }

    private async Task HandleForget()
    {
        navi.NavigateTo("/ResetPwd", true);
    }

}
